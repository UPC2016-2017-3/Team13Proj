<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAD/ANMDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8wKZiFABQAUAFABQAUAFABQAbc0AOCcUAGygA2UAGygA2UAGy
        gBCnNACYxQAUAFABQAUAFABQAUAFAFG+/wBaP92kaR2L1MzCgAoAKACgAoAcFyKAFxigAoAUDNACjigB
        CM0AG2gA20AG2gBRxQAhGaAEPFABQA0rk0AJjFABQAUAFABQAUAUb7/Wj/dpGkdi9TMwoAKACgA25oAc
        BgUALQAoGaAFHFABQAUAFABQAUAFABQAUAFACEZoAQ8UAFADT1oASgAoAKACgCjff60f7tI0jsXqZmFA
        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
        xg0oKkEY7UjSOx//2Q==
</value>
  </data>
</root>